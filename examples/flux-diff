Comparing release=flux-giantswarm, chart=flux-app/flux-app
flux-system, helm-controller, Deployment (apps) has changed:
  # Source: flux-app/templates/base/deployment-helm-controller.yaml
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: helm-controller
      app.kubernetes.io/name: "flux-app"
      app.kubernetes.io/instance: "flux-giantswarm"
      app.kubernetes.io/managed-by: "Helm"
      application.giantswarm.io/team: "team-honeybadger"
      helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
      giantswarm.io/service_type: managed
    name: helm-controller
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: helm-controller
        app.kubernetes.io/name: "flux-app"
        app.kubernetes.io/instance: "flux-giantswarm"
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        labels:
          app.kubernetes.io/component: helm-controller
          app.kubernetes.io/name: "flux-app"
          app.kubernetes.io/instance: "flux-giantswarm"
      spec:
        containers:
          - args:
              - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
              - --watch-all-namespaces
              - --log-level=info
              - --log-encoding=json
              - --enable-leader-election
            env:
              - name: RUNTIME_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            image: 'docker.io/giantswarm/fluxcd-helm-controller:v0.36.2'
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /healthz
                port: healthz
            name: manager
            ports:
              - containerPort: 8080
                name: http-prom
                protocol: TCP
              - containerPort: 9440
                name: healthz
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /readyz
                port: healthz
            resources:
              requests:
                cpu: 100m
                memory: 64Mi
-             limits:
-               cpu: 500m
-               memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              readOnlyRootFilesystem: true
              runAsUser: 100
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
              - mountPath: /tmp
                name: temp
        priorityClassName: system-cluster-critical
        securityContext:
          fsGroup: 1337
          seccompProfile:
            type: RuntimeDefault
        serviceAccountName: helm-controller
        terminationGracePeriodSeconds: 600
        volumes:
          - emptyDir: {}
            name: temp
flux-system, image-automation-controller, Deployment (apps) has changed:
  # Source: flux-app/templates/base/deployment-image-automation-controller.yaml
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: image-automation-controller
      app.kubernetes.io/name: "flux-app"
      app.kubernetes.io/instance: "flux-giantswarm"
      app.kubernetes.io/managed-by: "Helm"
      application.giantswarm.io/team: "team-honeybadger"
      helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
      giantswarm.io/service_type: managed
    name: image-automation-controller
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: image-automation-controller
        app.kubernetes.io/name: "flux-app"
        app.kubernetes.io/instance: "flux-giantswarm"
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        labels:
          app.kubernetes.io/component: image-automation-controller
          app.kubernetes.io/name: "flux-app"
          app.kubernetes.io/instance: "flux-giantswarm"
      spec:
        containers:
          - args:
              - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
              - --watch-all-namespaces
              - --log-level=info
              - --log-encoding=json
              - --enable-leader-election
            env:
              - name: RUNTIME_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            image: 'docker.io/giantswarm/fluxcd-image-automation-controller:v0.36.1'
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /healthz
                port: healthz
            name: manager
            ports:
              - containerPort: 8080
                name: http-prom
                protocol: TCP
              - containerPort: 9440
                name: healthz
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /readyz
                port: healthz
            resources:
              requests:
                cpu: 100m
                memory: 64Mi
-             limits:
-               cpu: 500m
-               memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              readOnlyRootFilesystem: true
              runAsUser: 100
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
              - mountPath: /tmp
                name: temp
        securityContext:
          fsGroup: 1337
          seccompProfile:
            type: RuntimeDefault
        serviceAccountName: image-automation-controller
        terminationGracePeriodSeconds: 10
        volumes:
          - emptyDir: {}
            name: temp
flux-system, image-reflector-controller, Deployment (apps) has changed:
  # Source: flux-app/templates/base/deployment-image-reflector-controller.yaml
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: image-reflector-controller
      app.kubernetes.io/name: "flux-app"
      app.kubernetes.io/instance: "flux-giantswarm"
      app.kubernetes.io/managed-by: "Helm"
      application.giantswarm.io/team: "team-honeybadger"
      helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
      giantswarm.io/service_type: managed
    name: image-reflector-controller
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: image-reflector-controller
        app.kubernetes.io/name: "flux-app"
        app.kubernetes.io/instance: "flux-giantswarm"
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        labels:
          app.kubernetes.io/component: image-reflector-controller
          app.kubernetes.io/name: "flux-app"
          app.kubernetes.io/instance: "flux-giantswarm"
      spec:
        containers:
          - args:
              - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
              - --watch-all-namespaces
              - --log-level=info
              - --log-encoding=json
              - --enable-leader-election
            env:
              - name: RUNTIME_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            image: 'docker.io/giantswarm/fluxcd-image-reflector-controller:v0.30.0'
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /healthz
                port: healthz
            name: manager
            ports:
              - containerPort: 8080
                name: http-prom
                protocol: TCP
              - containerPort: 9440
                name: healthz
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /readyz
                port: healthz
            resources:
              requests:
                cpu: 100m
                memory: 64Mi
-             limits:
-               cpu: 500m
-               memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              readOnlyRootFilesystem: true
              runAsUser: 100
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
              - mountPath: /tmp
                name: temp
              - mountPath: /data
                name: data
        securityContext:
          fsGroup: 1337
          seccompProfile:
            type: RuntimeDefault
        serviceAccountName: image-reflector-controller
        terminationGracePeriodSeconds: 10
        volumes:
          - emptyDir: {}
            name: temp
          - emptyDir: {}
            name: data
flux-system, kustomize-controller, Deployment (apps) has changed:
  # Source: flux-app/templates/base/deployment-kustomize-controller.yaml
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: kustomize-controller
      app.kubernetes.io/name: "flux-app"
      app.kubernetes.io/instance: "flux-giantswarm"
      app.kubernetes.io/managed-by: "Helm"
      application.giantswarm.io/team: "team-honeybadger"
      helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
      giantswarm.io/service_type: managed
    name: kustomize-controller
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: kustomize-controller
        app.kubernetes.io/name: "flux-app"
        app.kubernetes.io/instance: "flux-giantswarm"
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        labels:
          app.kubernetes.io/component: kustomize-controller
          app.kubernetes.io/name: "flux-app"
          app.kubernetes.io/instance: "flux-giantswarm"
      spec:
        containers:
          - args:
              - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
              - --watch-all-namespaces
              - --log-level=info
              - --log-encoding=json
              - --enable-leader-election
            env:
              - name: RUNTIME_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            image: 'docker.io/giantswarm/fluxcd-kustomize-controller:v1.1.1'
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /healthz
                port: healthz
            name: manager
            ports:
              - containerPort: 8080
                name: http-prom
                protocol: TCP
              - containerPort: 9440
                name: healthz
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /readyz
                port: healthz
            resources:
              requests:
                cpu: 100m
                memory: 64Mi
-             limits:
-               cpu: 500m
-               memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              readOnlyRootFilesystem: true
              runAsUser: 100
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
              - mountPath: /tmp
                name: temp
        priorityClassName: system-cluster-critical
        securityContext:
          fsGroup: 1337
          seccompProfile:
            type: RuntimeDefault
        serviceAccountName: kustomize-controller
        terminationGracePeriodSeconds: 60
        volumes:
          - emptyDir: {}
            name: temp
flux-system, notification-controller, Deployment (apps) has changed:
  # Source: flux-app/templates/base/deployment-notification-controller.yaml
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/name: "flux-app"
      app.kubernetes.io/instance: "flux-giantswarm"
      app.kubernetes.io/managed-by: "Helm"
      application.giantswarm.io/team: "team-honeybadger"
      helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
      giantswarm.io/service_type: managed
    name: notification-controller
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: notification-controller
        app.kubernetes.io/name: "flux-app"
        app.kubernetes.io/instance: "flux-giantswarm"
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        labels:
          app.kubernetes.io/component: notification-controller
          app.kubernetes.io/name: "flux-app"
          app.kubernetes.io/instance: "flux-giantswarm"
      spec:
        containers:
          - args:
              - --watch-all-namespaces
              - --log-level=info
              - --log-encoding=json
              - --enable-leader-election
            env:
              - name: RUNTIME_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
            image: 'docker.io/giantswarm/fluxcd-notification-controller:v1.1.0'
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /healthz
                port: healthz
            name: manager
            ports:
              - containerPort: 9090
                name: http
                protocol: TCP
              - containerPort: 9292
                name: http-webhook
                protocol: TCP
              - containerPort: 8080
                name: http-prom
                protocol: TCP
              - containerPort: 9440
                name: healthz
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /readyz
                port: healthz
            resources:
              requests:
                cpu: 100m
                memory: 64Mi
-             limits:
-               cpu: 500m
-               memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              readOnlyRootFilesystem: true
              runAsUser: 100
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
              - mountPath: /tmp
                name: temp
        securityContext:
          fsGroup: 1337
          seccompProfile:
            type: RuntimeDefault
        serviceAccountName: notification-controller
        terminationGracePeriodSeconds: 10
        volumes:
          - emptyDir: {}
            name: temp
flux-system, source-controller, Deployment (apps) has changed:
  # Source: flux-app/templates/base/deployment-source-controller.yaml
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: source-controller
      app.kubernetes.io/name: "flux-app"
      app.kubernetes.io/instance: "flux-giantswarm"
      app.kubernetes.io/managed-by: "Helm"
      application.giantswarm.io/team: "team-honeybadger"
      helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
      giantswarm.io/service_type: managed
    name: source-controller
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: source-controller
        app.kubernetes.io/name: "flux-app"
        app.kubernetes.io/instance: "flux-giantswarm"
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        labels:
          app.kubernetes.io/component: source-controller
          app.kubernetes.io/name: "flux-app"
          app.kubernetes.io/instance: "flux-giantswarm"
      spec:
        containers:
          - args:
              - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
              - --watch-all-namespaces
              - --log-level=info
              - --log-encoding=json
              - --enable-leader-election
              - --storage-path=/data
              - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
            env:
              - name: RUNTIME_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: TUF_ROOT
                value: /tmp/.sigstore
            image: 'docker.io/giantswarm/fluxcd-source-controller:v1.1.2'
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /healthz
                port: healthz
            name: manager
            ports:
              - containerPort: 9090
                name: http
                protocol: TCP
              - containerPort: 8080
                name: http-prom
                protocol: TCP
              - containerPort: 9440
                name: healthz
                protocol: TCP
            readinessProbe:
              httpGet:
                path: /
                port: http
            resources:
              requests:
                cpu: 50m
                memory: 64Mi
-             limits:
-               cpu: 500m
-               memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              readOnlyRootFilesystem: true
              runAsUser: 100
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
              - mountPath: /data
                name: data
              - mountPath: /tmp
                name: tmp
        priorityClassName: system-cluster-critical
        securityContext:
          fsGroup: 1337
          seccompProfile:
            type: RuntimeDefault
        serviceAccountName: source-controller
        terminationGracePeriodSeconds: 10
        volumes:
          - emptyDir: {}
            name: data
          - emptyDir: {}
            name: tmp
flux-system, helm-controller, VerticalPodAutoscaler (autoscaling.k8s.io) has been added:
- 
+ # Source: flux-app/templates/extras/vpa.yaml
+ apiVersion: autoscaling.k8s.io/v1
+ kind: VerticalPodAutoscaler
+ metadata:
+   name: helm-controller
+   labels:
+     app.kubernetes.io/name: "flux-app"
+     app.kubernetes.io/instance: "flux-giantswarm"
+     app.kubernetes.io/managed-by: "Helm"
+     application.giantswarm.io/team: "team-honeybadger"
+     helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
+     giantswarm.io/service_type: managed
+ spec:
+   resourcePolicy:
+     containerPolicies:
+     - containerName: manager
+       controlledValues: RequestsAndLimits
+       minAllowed:
+         cpu: 100m
+         memory: 64Mi
+       maxAllowed:
+         cpu: 500m
+         memory: 256Mi
+       mode: Auto
+   targetRef:
+     apiVersion: apps/v1
+     kind: Deployment
+     name:  helm-controller
+   updatePolicy:
+     updateMode: Auto
flux-system, image-automation-controller, VerticalPodAutoscaler (autoscaling.k8s.io) has been added:
- 
+ # Source: flux-app/templates/extras/vpa.yaml
+ apiVersion: autoscaling.k8s.io/v1
+ kind: VerticalPodAutoscaler
+ metadata:
+   name: image-automation-controller
+   labels:
+     app.kubernetes.io/name: "flux-app"
+     app.kubernetes.io/instance: "flux-giantswarm"
+     app.kubernetes.io/managed-by: "Helm"
+     application.giantswarm.io/team: "team-honeybadger"
+     helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
+     giantswarm.io/service_type: managed
+ spec:
+   resourcePolicy:
+     containerPolicies:
+     - containerName: manager
+       controlledValues: RequestsAndLimits
+       minAllowed:
+         cpu: 100m
+         memory: 64Mi
+       maxAllowed:
+         cpu: 500m
+         memory: 256Mi
+       mode: Auto
+   targetRef:
+     apiVersion: apps/v1
+     kind: Deployment
+     name:  image-automation-controller
+   updatePolicy:
+     updateMode: Auto
flux-system, image-reflector-controller, VerticalPodAutoscaler (autoscaling.k8s.io) has been added:
- 
+ # Source: flux-app/templates/extras/vpa.yaml
+ apiVersion: autoscaling.k8s.io/v1
+ kind: VerticalPodAutoscaler
+ metadata:
+   name: image-reflector-controller
+   labels:
+     app.kubernetes.io/name: "flux-app"
+     app.kubernetes.io/instance: "flux-giantswarm"
+     app.kubernetes.io/managed-by: "Helm"
+     application.giantswarm.io/team: "team-honeybadger"
+     helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
+     giantswarm.io/service_type: managed
+ spec:
+   resourcePolicy:
+     containerPolicies:
+     - containerName: manager
+       controlledValues: RequestsAndLimits
+       minAllowed:
+         cpu: 100m
+         memory: 64Mi
+       maxAllowed:
+         cpu: 500m
+         memory: 256Mi
+       mode: Auto
+   targetRef:
+     apiVersion: apps/v1
+     kind: Deployment
+     name: image-reflector-controller
+   updatePolicy:
+     updateMode: Auto
flux-system, kustomize-controller, VerticalPodAutoscaler (autoscaling.k8s.io) has been added:
- 
+ # Source: flux-app/templates/extras/vpa.yaml
+ apiVersion: autoscaling.k8s.io/v1
+ kind: VerticalPodAutoscaler
+ metadata:
+   name: kustomize-controller
+   labels:
+     app.kubernetes.io/name: "flux-app"
+     app.kubernetes.io/instance: "flux-giantswarm"
+     app.kubernetes.io/managed-by: "Helm"
+     application.giantswarm.io/team: "team-honeybadger"
+     helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
+     giantswarm.io/service_type: managed
+ spec:
+   resourcePolicy:
+     containerPolicies:
+     - containerName: manager
+       controlledValues: RequestsAndLimits
+       minAllowed:
+         cpu: 100m
+         memory: 64Mi
+       maxAllowed:
+         cpu: 500m
+         memory: 256Mi
+       mode: Auto
+   targetRef:
+     apiVersion: apps/v1
+     kind: Deployment
+     name: kustomize-controller
+   updatePolicy:
+     updateMode: Auto
flux-system, notification-controller, VerticalPodAutoscaler (autoscaling.k8s.io) has been added:
- 
+ # Source: flux-app/templates/extras/vpa.yaml
+ apiVersion: autoscaling.k8s.io/v1
+ kind: VerticalPodAutoscaler
+ metadata:
+   name: notification-controller
+   namespace: flux-system
+ spec:
+   resourcePolicy:
+     containerPolicies:
+     - containerName: manager
+       controlledValues: RequestsAndLimits
+       minAllowed:
+         cpu: 100m
+         memory: 64Mi
+       maxAllowed:
+         cpu: 500m
+         memory: 256Mi
+       mode: Auto
+   targetRef:
+     apiVersion: apps/v1
+     kind: Deployment
+     name: notification-controller
+   updatePolicy:
+     updateMode: Auto
flux-system, source-controller, VerticalPodAutoscaler (autoscaling.k8s.io) has been added:
- 
+ # Source: flux-app/templates/extras/vpa.yaml
+ apiVersion: autoscaling.k8s.io/v1
+ kind: VerticalPodAutoscaler
+ metadata:
+   name: source-controller
+   namespace: flux-system
+   labels:
+     app.kubernetes.io/name: "flux-app"
+     app.kubernetes.io/instance: "flux-giantswarm"
+     app.kubernetes.io/managed-by: "Helm"
+     application.giantswarm.io/team: "team-honeybadger"
+     helm.sh/chart: "flux-app-1.2.0-faa5f89120c052b3d5850504a5ed86ab93b89b55"
+     giantswarm.io/service_type: managed
+ spec:
+   resourcePolicy:
+     containerPolicies:
+     - containerName: manager
+       controlledValues: RequestsAndLimits
+       minAllowed:
+         cpu: 50m
+         memory: 64Mi
+       maxAllowed:
+         cpu: 500m
+         memory: 256Mi
+       mode: Auto
+   targetRef:
+     apiVersion: apps/v1
+     kind: Deployment
+     name: source-controller
+   updatePolicy:
+     updateMode: Auto


